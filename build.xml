<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="GeoResults" default="dist" basedir=".">
	
	<property name="release" value="2.0"/>
	
	<property name="lib-boot-only" location="lib/boot_only"/>
	<property name="lib-web-only" location="lib/web_only"/>
	<property name="lib-build-only" location="lib/build_only"/>
	<property name="lib-build-boot" location="lib/build_boot"/>
	<property name="lib-build-web" location="lib/build_web"/>
	
	<property name="testm-src" location="src/test/micro/java"/>
	<property name="testm-build" location="target/ant-testm-build"/>
	<property name="testm-result" location="target/ant-testm-result"/>
	
	<property name="testi-src" location="src/test/integration/java"/>
	<property name="testi-build" location="target/ant-testi-build"/>
	<property name="testi-config" location="src/main/config"/>
	<property name="testi-result" location="target/ant-testi-result"/>
	
	<property name="javax-src" location="src/javax/java"/>
	<property name="javax-res" location="src/javax/resources"/>
	<property name="javax-build" location="target/ant-javax-build"/>
	<property name="javax-dist" location="target/ant-dist"/>
	<property name="javax-dist-jar" location="${javax-dist}/scs-javax.jar"/>
	<property name="javax-doc" location="target/ant-javax-doc"/>
	
	<property name="main-src" location="src/main/java"/>
	<property name="main-web-src" location="src/main/webcontent"/>
	<property name="main-scripts" location="src/main/scripts"/>
	<property name="weblib" location="${main-web-src}/WEB-INF/lib"/>
	<property name="main-build" location="target/ant-main-build"/>
	<property name="main-dist" location="target/ant-dist"/>
	<property name="main-doc" location="target/ant-main-doc"/>
	<property name="keyfinder-result" location="target/ant-main-keyfinder-result"/>
	
	<property name="champ-src" location="src/championship/java"/>
	<property name="champ-res" location="src/championship/resources"/>
	<property name="champ-build" location="target/ant-champ-build"/>
	<property name="champ-dist" location="target/ant-dist"/>
	<property name="champ-result" location="target/ant-champ-result"/>
	<property name="champ-run-config" location="src/championship/config/championship2011.properties"/>
	
	<path id="build-classpath">
	    <fileset dir="${lib-build-only}">
	        <include name="*.jar"/>
	    </fileset>
	    <fileset dir="${lib-build-web}">
	        <include name="*.jar"/>
	    </fileset>
	    <fileset dir="${lib-build-boot}">
	        <include name="*.jar"/>
	    </fileset>
	</path>
	
	<path id="test-classpath">
		<path refid="build-classpath"/>
		<pathelement path="${javax-build}"/>
		<pathelement path="${main-build}"/>
		<pathelement path="${testm-build}"/>
		<pathelement path="${testi-build}"/>
		<pathelement path="${testi-config}"/>
	</path>
	
	<target name="init">
		<mkdir dir="${champ-build}"/>
		<mkdir dir="${champ-result}/data"/>
		<mkdir dir="${keyfinder-result}"/>
		<mkdir dir="${main-build}"/>
		<mkdir dir="${javax-build}"/>
		<mkdir dir="${javax-dist}"/>
		<mkdir dir="${testm-build}"/>
		<mkdir dir="${testm-result}"/>
		<mkdir dir="${testi-build}"/>
		<mkdir dir="${testi-result}"/>
		<mkdir dir="${champ-dist}"/>
		<mkdir dir="${main-dist}"/>
	</target>

	<target name="compile" depends="init">
		<javac srcdir="${javax-src}" destdir="${javax-build}" classpathref="build-classpath" encoding="UTF-8" includeantruntime="false"/>
		<copy todir="${javax-build}">
		    <fileset dir="${javax-src}" excludes="**/*.java"/>
		</copy>
		<copy todir="${javax-build}">
		    <fileset dir="${javax-res}"/>
		</copy>
		    	
		<javac srcdir="${champ-src}" destdir="${champ-build}" classpathref="build-classpath" encoding="UTF-8" includeantruntime="false"/>
		<copy todir="${champ-build}">
		    <fileset dir="${champ-src}" excludes="**/*.java"/>
		</copy>
		
		<javac srcdir="${main-src}" destdir="${main-build}" encoding="UTF-8" includeantruntime="false">
			<classpath>
				<path refid="build-classpath"/>
				<pathelement location="${javax-build}"/>
			</classpath>
		</javac>
		<copy todir="${main-build}">
		    <fileset dir="${main-src}" excludes="**/*.java"/>
		</copy>
		
		<javac srcdir="${testm-src}" destdir="${testm-build}" encoding="UTF-8" includeantruntime="false">
			<classpath>
				<path refid="build-classpath"/>
			</classpath>
		</javac>
		
		<javac srcdir="${testi-src}" destdir="${testi-build}" classpathref="build-classpath" encoding="UTF-8" includeantruntime="false">
			<classpath>
				<path refid="build-classpath"/>
				<pathelement location="${javax-build}"/>
				<pathelement location="${main-build}"/>
			</classpath>
		</javac>
	</target>

	<target name="test-micro" depends="compile">
		<junit haltonfailure="true">
			<classpath refid="test-classpath"/>
			<formatter type="xml"/>
			<batchtest todir="${testm-result}">
				<fileset dir="${testm-src}" includes="**/*.java"/>
			</batchtest>
		</junit>
	</target>

	<target name="test-integration" depends="compile">
		<junit haltonfailure="true">
			<classpath refid="test-classpath"/>
			<formatter type="xml"/>
			<batchtest todir="${testi-result}">
				<fileset dir="${testi-src}" includes="**/*.java"/>
			</batchtest>
		</junit>
	</target>
	
	<target name="test" depends="test-micro,test-integration"/>

	<target name="dist" depends="compile">
		<jar jarfile="${javax-dist-jar}" basedir="${javax-build}">
			<fileset dir="${javax-res}">
				<include name="META-INF/**"/>
			</fileset>
		</jar>
		<jar jarfile="${champ-dist}/GeoChampionship.jar" basedir="${champ-build}" filesetmanifest="mergewithoutmain">
			<fileset dir="${champ-src}">
				<include name="META-INF/**"/>
			</fileset>
			<zipfileset src="${lib-build-web}/mysql-connector-java-5.1.7-bin.jar" excludes="META-INF/*.SF"/>
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="hu.sebcsaba.geochampionship.App"/>
				<attribute name="Class-Path" value="."/>
			</manifest>
		</jar>
		<war destfile="${main-dist}/georesults.war" needxmlfile="false" basedir="${main-web-src}">
			<classes dir="${main-build}"/>
			<lib dir="${lib-build-web}"/>
			<lib dir="${lib-web-only}"/>
			<lib file="${javax-dist-jar}"/>
		</war>
		<pathconvert property="tmp-libs-in-war" pathsep=" ">
			<mapper>
				<flattenmapper/>
			</mapper>
			<path>
				<fileset dir="${lib-boot-only}"/>
				<fileset dir="${lib-build-boot}"/>
			</path>
		</pathconvert>
		<pathconvert property="webapp-libs-in-war" pathsep=" ../webapp/WEB-INF/lib/">
			<!-- TODO ezt kissé máshogy kellene... -->
			<mapper>
				<flattenmapper/>
			</mapper>
			<path>
				<fileset dir="${lib-web-only}"/>
				<fileset dir="${lib-build-web}"/>
			</path>
		</pathconvert>
		<jar jarfile="${main-dist}/georesults-main.jar" basedir="${main-build}">
			<manifest>
				<attribute name="Main-Class" value="scs.georesults.App"/>
				<attribute name="Class-Path" value="${tmp-libs-in-war} ../webapp/WEB-INF/lib/scs-javax.jar ../webapp/WEB-INF/lib/${webapp-libs-in-war}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="release" depends="dist">
		<zip destfile="${main-dist}/georesults-${release}.zip">
			<zipfileset dir="${lib-boot-only}" prefix="georesults-${release}/bin/"/>
			<zipfileset dir="${lib-build-boot}" prefix="georesults-${release}/bin/"/>
			<zipfileset file="${main-dist}/georesults-main.jar" prefix="georesults-${release}/bin/"/>
			<zipfileset dir="${main-web-src}" prefix="georesults-${release}/webapp/"/>
			<zipfileset dir="${lib-build-web}" prefix="georesults-${release}/webapp/WEB-INF/lib"/>
			<zipfileset dir="${lib-web-only}" prefix="georesults-${release}/webapp/WEB-INF/lib"/>
			<zipfileset file="${main-dist}/scs-javax.jar" prefix="georesults-${release}/webapp/WEB-INF/lib"/>
			<zipfileset dir="${main-scripts}" prefix="georesults-${release}/"/>
		</zip>
	</target>

	<target name="doc" depends="init">
		<javadoc sourcepath="${javax-src}" destdir="${javax-doc}" classpathref="build-classpath" encoding="UTF-8"/>
		<jar jarfile="${javax-dist}/scs-javax-doc.jar" basedir="${javax-doc}"/>
		<javadoc sourcepath="${main-src}" destdir="${main-doc}" classpathref="build-classpath" encoding="UTF-8"/>
		<jar jarfile="${main-dist}/georesults-doc.jar" basedir="${main-doc}"/>
	</target>

	<target name="clean">
		<delete dir="${testm-build}"/>
		<delete dir="${testm-result}"/>
		<delete dir="${testi-build}"/>
		<delete dir="${testi-result}"/>
		<delete dir="${javax-build}"/>
		<delete dir="${javax-dist}"/>
		<delete dir="${javax-doc}"/>
		<delete dir="${champ-build}"/>
		<delete dir="${champ-dist}"/>
		<delete dir="${champ-result}"/>
		<delete dir="${keyfinder-result}"/>
		<delete dir="${main-build}"/>
		<delete dir="${main-dist}"/>
		<delete dir="${main-doc}"/>
	</target>
	
	<target name="run-keyfinder" depends="init, compile">
		<java classname="scs.georesults.KeyFinder" fork="true" dir="${keyfinder-result}">
			<classpath>
				<pathelement location="${main-build}"/>
				<pathelement location="${javax-dist-jar}"/>
			</classpath>
			<arg value="${main-src}"/>
			<arg value="${main-web-src}"/>
		</java>
	</target>

	<target name="run-champ" depends="dist">
		<java jar="${champ-dist}/GeoChampionship.jar" fork="true" dir="${champ-result}">
			<arg value="${champ-run-config}"/>
		</java>
		<copy todir="${champ-result}">
			<fileset dir="${champ-res}"/>
		</copy>
	</target>

</project>
